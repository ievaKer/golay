package utils

enum class Matrix(val value: List<List<Int>>) {
    H(listOf(
        listOf(0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        listOf(1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        listOf(1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        listOf(1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
        listOf(1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
        listOf(1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
        listOf(1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
        listOf(1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0),
        listOf(1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),
        listOf(1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0),
        listOf(1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
        listOf(1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)
    )),

    A(listOf(
        listOf(0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        listOf(1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0),
        listOf(1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1),
        listOf(1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1),
        listOf(1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0),
        listOf(1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1),
        listOf(1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1),
        listOf(1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1),
        listOf(1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0),
        listOf(1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0),
        listOf(1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0),
        listOf(1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1)
    )),

    G(listOf(
        listOf(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
        listOf(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0),
        listOf(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1),
        listOf(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1),
        listOf(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0),
        listOf(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1),
        listOf(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1),
        listOf(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1),
        listOf(0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0),
        listOf(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0),
        listOf(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0),
        listOf(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1)
    ))
}

//
//    fun add(arrayA: Array<Int>, arrayB: Array<Int>): Array<Int?> {
//        val output = arrayOfNulls<Int>(arrayA.size)
//        for (i in arrayA.indices) {
//            output[i] = (arrayA[i] + arrayB[i]) % 2
//        }
//        return output
//    }
//

//
//    fun invert(input: Array<Int>, positions: Array<Int>) {
//        for (position in positions) {
//            input[position] = input[position] xor 1
//        }
//    }
//}